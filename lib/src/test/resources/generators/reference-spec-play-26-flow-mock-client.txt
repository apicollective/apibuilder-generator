/**
 * Generated by API Builder - https://www.apibuilder.io
 * Service version: 0.3.47
 */

package io.apibuilder.reference.api.v0

import io.flow.common.v0.models.UserReference
import io.flow.play.util.{AuthHeaders, FlowSession}
import io.apibuilder.reference.api.v0.Client
import io.flow.test.utils.FlowMockClient

trait MockApidocReferenceApiClient extends FlowMockClient[
   io.apibuilder.reference.api.v0.Client,
   io.apibuilder.reference.api.v0.errors.GenericErrorResponse,
   io.apibuilder.reference.api.v0.errors.UnitResponse
 ]{

 override def createAnonymousClient(baseUrl: String): io.apibuilder.reference.api.v0.Client =
   new io.apibuilder.reference.api.v0.Client(
     ws = wsClient,
     baseUrl = baseUrl
   )

 override def createIdentifiedClient(baseUrl: String, user: UserReference, org: Option[String], session: Option[FlowSession]): Client = {
   val auth = org match {
     case None =>  AuthHeaders.user(user, session = session)
     case Some(o) => AuthHeaders.organization(user, o, session = session)
   }

   new io.apibuilder.reference.api.v0.Client(
     ws = wsClient,
     baseUrl = baseUrl,
     defaultHeaders = authHeaders.headers(auth)
   )
 }
}