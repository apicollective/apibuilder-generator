object Bindables {

  import play.api.mvc.{PathBindable, QueryStringBindable}
  import org.joda.time.{DateTime, LocalDate}
  import org.joda.time.format.ISODateTimeFormat
  import io.apibuilder.reference.api.v0.models._

  // Type: date-time-iso8601
  implicit val pathBindableTypeDateTimeIso8601 = new PathBindable.Parsing[org.joda.time.DateTime](
    ISODateTimeFormat.dateTimeParser.parseDateTime(_), _.toString, (key: String, e: _root_.java.lang.Exception) => s"Error parsing date time $key. Example: 2014-04-29T11:56:52Z"
  )

  implicit val queryStringBindableTypeDateTimeIso8601 = new QueryStringBindable.Parsing[org.joda.time.DateTime](
    ISODateTimeFormat.dateTimeParser.parseDateTime(_), _.toString, (key: String, e: _root_.java.lang.Exception) => s"Error parsing date time $key. Example: 2014-04-29T11:56:52Z"
  )

  // Type: date-iso8601
  implicit val pathBindableTypeDateIso8601 = new PathBindable.Parsing[org.joda.time.LocalDate](
    ISODateTimeFormat.yearMonthDay.parseLocalDate(_), _.toString, (key: String, e: _root_.java.lang.Exception) => s"Error parsing date $key. Example: 2014-04-29"
  )

  implicit val queryStringBindableTypeDateIso8601 = new QueryStringBindable.Parsing[org.joda.time.LocalDate](
    ISODateTimeFormat.yearMonthDay.parseLocalDate(_), _.toString, (key: String, e: _root_.java.lang.Exception) => s"Error parsing date $key. Example: 2014-04-29"
  )

  // Enum: AgeGroup
  private[this] val enumAgeGroupNotFound = (key: String, e: _root_.java.lang.Exception) => s"Unrecognized $key, should be one of ${io.apibuilder.reference.api.v0.models.AgeGroup.all.mkString(", ")}"

  implicit val pathBindableEnumAgeGroup = new PathBindable.Parsing[io.apibuilder.reference.api.v0.models.AgeGroup] (
    AgeGroup.fromString(_).get, _.toString, enumAgeGroupNotFound
  )

  implicit val queryStringBindableEnumAgeGroup = new QueryStringBindable.Parsing[io.apibuilder.reference.api.v0.models.AgeGroup](
    AgeGroup.fromString(_).get, _.toString, enumAgeGroupNotFound
  )

}