/**
 * Generated by API Builder - https://www.apibuilder.io
 * Service version: 1.0.0
 */
import anorm._

package test.apidoc.apidoctest.v0.anorm.parsers {

  import test.apidoc.apidoctest.v0.anorm.conversions.Standard._

  import test.apidoc.apidoctest.v0.anorm.conversions.Types._

  object Reference {

    def parserWithPrefix(prefix: String, sep: String = "_"): RowParser[test.apidoc.apidoctest.v0.models.Reference] = parser(prefixOpt = Some(s"$prefix$sep"))

    def parser(
      date: String = "date",
      time: String = "time",
      prefixOpt: Option[String] = None
    ): RowParser[test.apidoc.apidoctest.v0.models.Reference] = {
      SqlParser.get[_root_.java.time.LocalDate](prefixOpt.getOrElse("") + date) ~
      SqlParser.get[_root_.java.time.Instant](prefixOpt.getOrElse("") + time) map {
        case date ~ time => {
          test.apidoc.apidoctest.v0.models.Reference(
            date = date,
            time = time
          )
        }
      }
    }

  }

}