/**
 * Generated by API Builder - https://www.apibuilder.io
 * Service version: 1.0.0
 */
import anorm._

package test.apidoc.apidoctest.v0.anorm.parsers {

  import test.apidoc.apidoctest.v0.anorm.conversions.Standard._

  import test.apidoc.apidoctest.v0.anorm.conversions.Types._

  object User {

    def parserWithPrefix(prefix: String, sep: String = "_"): RowParser[test.apidoc.apidoctest.v0.models.User] = parser(prefixOpt = Some(s"$prefix$sep"))

    def parser(
      guid: String = "guid",
      emails: String = "emails",
      prefixOpt: Option[String] = None
    ): RowParser[test.apidoc.apidoctest.v0.models.User] = {
      SqlParser.get[_root_.java.util.UUID](prefixOpt.getOrElse("") + guid) ~
      SqlParser.get[Seq[String]](prefixOpt.getOrElse("") + emails) map {
        case guid ~ emails => {
          test.apidoc.apidoctest.v0.models.User(
            guid = guid,
            emails = emails
          )
        }
      }
    }

  }

}