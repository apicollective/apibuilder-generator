/**
  * Generated by API Builder - https://www.apibuilder.io
  * Service version: 0.14.60
  */
package io.apibuilder.generator.v0.models

package object gens {

  private[v0] implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsJodaDateTime
    : _root_.org.scalacheck.Arbitrary[_root_.org.joda.time.DateTime] =
    _root_.org.scalacheck.Arbitrary(genJodaDateTime)
  private[v0] lazy val genJodaDateTime
    : _root_.org.scalacheck.Gen[_root_.org.joda.time.DateTime] =
    _root_.org.scalacheck.Gen.lzy {
      _root_.org.scalacheck.Gen
        .posNum[Long]
        .map(instant => new _root_.org.joda.time.DateTime(instant))
    }

  private[v0] implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsJodaLocalDate
    : _root_.org.scalacheck.Arbitrary[_root_.org.joda.time.LocalDate] =
    _root_.org.scalacheck.Arbitrary(genJodaLocalDate)
  private[v0] lazy val genJodaLocalDate
    : _root_.org.scalacheck.Gen[_root_.org.joda.time.LocalDate] =
    _root_.org.scalacheck.Gen.lzy {
      _root_.org.scalacheck.Gen
        .posNum[Long]
        .map(instant => new _root_.org.joda.time.LocalDate(instant))
    }

  private[v0] implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsJsObject
    : _root_.org.scalacheck.Arbitrary[_root_.play.api.libs.json.JsObject] =
    _root_.org.scalacheck.Arbitrary(genJsObject)
  private[v0] lazy val genJsObject
    : _root_.org.scalacheck.Gen[_root_.play.api.libs.json.JsObject] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        underlying <- _root_.org.scalacheck.Arbitrary
          .arbitrary[Map[String, _root_.play.api.libs.json.JsValue]]
      } yield _root_.play.api.libs.json.JsObject(underlying)
    }

  private[v0] implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsJsValue
    : _root_.org.scalacheck.Arbitrary[_root_.play.api.libs.json.JsValue] =
    _root_.org.scalacheck.Arbitrary(genJsValue)
  private[v0] lazy val genJsValue
    : _root_.org.scalacheck.Gen[_root_.play.api.libs.json.JsValue] =
    _root_.org.scalacheck.Gen.lzy {
      _root_.org.scalacheck.Gen.oneOf(
        _root_.org.scalacheck.Arbitrary
          .arbitrary[IndexedSeq[_root_.play.api.libs.json.JsValue]]
          .map(_root_.play.api.libs.json.JsArray),
        _root_.org.scalacheck.Arbitrary
          .arbitrary[Boolean]
          .map(play.api.libs.json.JsBoolean),
        _root_.org.scalacheck.Gen.const(play.api.libs.json.JsNull),
        _root_.org.scalacheck.Arbitrary
          .arbitrary[BigDecimal]
          .map(play.api.libs.json.JsNumber),
        // _root_.org.scalacheck.Arbitrary.arbitrary[_root_.play.api.libs.json.JsObject],
        _root_.org.scalacheck.Arbitrary
          .arbitrary[String]
          .map(_root_.play.api.libs.json.JsString)
      )
    }

  import io.apibuilder.spec.v0.models.gens._

  implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsFileFlag
    : _root_.org.scalacheck.Arbitrary[
      io.apibuilder.generator.v0.models.FileFlag] =
    _root_.org.scalacheck.Arbitrary(genFileFlag)
  implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsAttribute
    : _root_.org.scalacheck.Arbitrary[
      io.apibuilder.generator.v0.models.Attribute] =
    _root_.org.scalacheck.Arbitrary(genAttribute)
  implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsError
    : _root_.org.scalacheck.Arbitrary[io.apibuilder.generator.v0.models.Error] =
    _root_.org.scalacheck.Arbitrary(genError)
  implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsFile
    : _root_.org.scalacheck.Arbitrary[io.apibuilder.generator.v0.models.File] =
    _root_.org.scalacheck.Arbitrary(genFile)
  implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsGenerator
    : _root_.org.scalacheck.Arbitrary[
      io.apibuilder.generator.v0.models.Generator] =
    _root_.org.scalacheck.Arbitrary(genGenerator)
  implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsHealthcheck
    : _root_.org.scalacheck.Arbitrary[
      io.apibuilder.generator.v0.models.Healthcheck] =
    _root_.org.scalacheck.Arbitrary(genHealthcheck)
  implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsInvocation
    : _root_.org.scalacheck.Arbitrary[
      io.apibuilder.generator.v0.models.Invocation] =
    _root_.org.scalacheck.Arbitrary(genInvocation)
  implicit lazy val arbitraryIoApibuilderGeneratorV0ModelsInvocationForm
    : _root_.org.scalacheck.Arbitrary[
      io.apibuilder.generator.v0.models.InvocationForm] =
    _root_.org.scalacheck.Arbitrary(genInvocationForm)

  lazy val genFileFlag
    : _root_.org.scalacheck.Gen[io.apibuilder.generator.v0.models.FileFlag] =
    _root_.org.scalacheck.Gen
      .const(io.apibuilder.generator.v0.models.FileFlag.Scaffolding)

  lazy val genAttribute
    : _root_.org.scalacheck.Gen[io.apibuilder.generator.v0.models.Attribute] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        name <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
        value <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
      } yield io.apibuilder.generator.v0.models.Attribute(name, value)
    }

  lazy val genError
    : _root_.org.scalacheck.Gen[io.apibuilder.generator.v0.models.Error] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        code <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
        message <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
      } yield io.apibuilder.generator.v0.models.Error(code, message)
    }

  lazy val genFile
    : _root_.org.scalacheck.Gen[io.apibuilder.generator.v0.models.File] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        name <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
        dir <- _root_.org.scalacheck.Arbitrary
          .arbitrary[_root_.scala.Option[String]]
        contents <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
        flags <- _root_.org.scalacheck.Arbitrary
          .arbitrary[_root_.scala.Option[Seq[
            io.apibuilder.generator.v0.models.FileFlag]]]
      } yield io.apibuilder.generator.v0.models.File(name, dir, contents, flags)
    }

  lazy val genGenerator
    : _root_.org.scalacheck.Gen[io.apibuilder.generator.v0.models.Generator] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        key <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
        name <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
        language <- _root_.org.scalacheck.Arbitrary
          .arbitrary[_root_.scala.Option[String]]
        description <- _root_.org.scalacheck.Arbitrary
          .arbitrary[_root_.scala.Option[String]]
        attributes <- _root_.org.scalacheck.Arbitrary.arbitrary[Seq[String]]
      } yield
        io.apibuilder.generator.v0.models
          .Generator(key, name, language, description, attributes)
    }

  lazy val genHealthcheck
    : _root_.org.scalacheck.Gen[io.apibuilder.generator.v0.models.Healthcheck] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        status <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
      } yield io.apibuilder.generator.v0.models.Healthcheck(status)
    }

  lazy val genInvocation
    : _root_.org.scalacheck.Gen[io.apibuilder.generator.v0.models.Invocation] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        source <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
        files <- _root_.org.scalacheck.Arbitrary
          .arbitrary[Seq[io.apibuilder.generator.v0.models.File]]
      } yield io.apibuilder.generator.v0.models.Invocation(source, files)
    }

  lazy val genInvocationForm: _root_.org.scalacheck.Gen[
    io.apibuilder.generator.v0.models.InvocationForm] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        service <- _root_.org.scalacheck.Arbitrary
          .arbitrary[io.apibuilder.spec.v0.models.Service]
        attributes <- _root_.org.scalacheck.Arbitrary
          .arbitrary[Seq[io.apibuilder.generator.v0.models.Attribute]]
        userAgent <- _root_.org.scalacheck.Arbitrary
          .arbitrary[_root_.scala.Option[String]]
      } yield
        io.apibuilder.generator.v0.models
          .InvocationForm(service, attributes, userAgent)
    }

}
