/**
  * Generated by API Builder - https://www.apibuilder.io
  * Service version: 0.14.60
  */
package io.apibuilder.common.v0.models

package object gens {

  private[v0] implicit lazy val arbitraryIoApibuilderCommonV0ModelsJodaDateTime
    : _root_.org.scalacheck.Arbitrary[_root_.org.joda.time.DateTime] =
    _root_.org.scalacheck.Arbitrary(genJodaDateTime)
  private[v0] lazy val genJodaDateTime
    : _root_.org.scalacheck.Gen[_root_.org.joda.time.DateTime] =
    _root_.org.scalacheck.Gen.lzy {
      _root_.org.scalacheck.Gen
        .posNum[Long]
        .map(instant => new _root_.org.joda.time.DateTime(instant))
    }

  private[v0] implicit lazy val arbitraryIoApibuilderCommonV0ModelsJodaLocalDate
    : _root_.org.scalacheck.Arbitrary[_root_.org.joda.time.LocalDate] =
    _root_.org.scalacheck.Arbitrary(genJodaLocalDate)
  private[v0] lazy val genJodaLocalDate
    : _root_.org.scalacheck.Gen[_root_.org.joda.time.LocalDate] =
    _root_.org.scalacheck.Gen.lzy {
      _root_.org.scalacheck.Gen
        .posNum[Long]
        .map(instant => new _root_.org.joda.time.LocalDate(instant))
    }

  private[v0] implicit lazy val arbitraryIoApibuilderCommonV0ModelsJsObject
    : _root_.org.scalacheck.Arbitrary[_root_.play.api.libs.json.JsObject] =
    _root_.org.scalacheck.Arbitrary(genJsObject)
  private[v0] lazy val genJsObject
    : _root_.org.scalacheck.Gen[_root_.play.api.libs.json.JsObject] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        underlying <- _root_.org.scalacheck.Arbitrary
          .arbitrary[Map[String, _root_.play.api.libs.json.JsValue]]
      } yield _root_.play.api.libs.json.JsObject(underlying)
    }

  private[v0] implicit lazy val arbitraryIoApibuilderCommonV0ModelsJsValue
    : _root_.org.scalacheck.Arbitrary[_root_.play.api.libs.json.JsValue] =
    _root_.org.scalacheck.Arbitrary(genJsValue)
  private[v0] lazy val genJsValue
    : _root_.org.scalacheck.Gen[_root_.play.api.libs.json.JsValue] =
    _root_.org.scalacheck.Gen.lzy {
      _root_.org.scalacheck.Gen.oneOf(
        _root_.org.scalacheck.Arbitrary
          .arbitrary[IndexedSeq[_root_.play.api.libs.json.JsValue]]
          .map(_root_.play.api.libs.json.JsArray),
        _root_.org.scalacheck.Arbitrary
          .arbitrary[Boolean]
          .map(play.api.libs.json.JsBoolean),
        _root_.org.scalacheck.Gen.const(play.api.libs.json.JsNull),
        _root_.org.scalacheck.Arbitrary
          .arbitrary[BigDecimal]
          .map(play.api.libs.json.JsNumber),
        // _root_.org.scalacheck.Arbitrary.arbitrary[_root_.play.api.libs.json.JsObject],
        _root_.org.scalacheck.Arbitrary
          .arbitrary[String]
          .map(_root_.play.api.libs.json.JsString)
      )
    }

  implicit lazy val arbitraryIoApibuilderCommonV0ModelsAudit
    : _root_.org.scalacheck.Arbitrary[io.apibuilder.common.v0.models.Audit] =
    _root_.org.scalacheck.Arbitrary(genAudit)
  implicit lazy val arbitraryIoApibuilderCommonV0ModelsHealthcheck
    : _root_.org.scalacheck.Arbitrary[
      io.apibuilder.common.v0.models.Healthcheck] =
    _root_.org.scalacheck.Arbitrary(genHealthcheck)
  implicit lazy val arbitraryIoApibuilderCommonV0ModelsReference
    : _root_.org.scalacheck.Arbitrary[
      io.apibuilder.common.v0.models.Reference] =
    _root_.org.scalacheck.Arbitrary(genReference)
  implicit lazy val arbitraryIoApibuilderCommonV0ModelsReferenceGuid
    : _root_.org.scalacheck.Arbitrary[
      io.apibuilder.common.v0.models.ReferenceGuid] =
    _root_.org.scalacheck.Arbitrary(genReferenceGuid)

  lazy val genAudit
    : _root_.org.scalacheck.Gen[io.apibuilder.common.v0.models.Audit] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        createdAt <- _root_.org.scalacheck.Arbitrary
          .arbitrary[_root_.org.joda.time.DateTime]
        createdBy <- _root_.org.scalacheck.Arbitrary
          .arbitrary[io.apibuilder.common.v0.models.ReferenceGuid]
        updatedAt <- _root_.org.scalacheck.Arbitrary
          .arbitrary[_root_.org.joda.time.DateTime]
        updatedBy <- _root_.org.scalacheck.Arbitrary
          .arbitrary[io.apibuilder.common.v0.models.ReferenceGuid]
      } yield
        io.apibuilder.common.v0.models
          .Audit(createdAt, createdBy, updatedAt, updatedBy)
    }

  lazy val genHealthcheck
    : _root_.org.scalacheck.Gen[io.apibuilder.common.v0.models.Healthcheck] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        status <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
      } yield io.apibuilder.common.v0.models.Healthcheck(status)
    }

  lazy val genReference
    : _root_.org.scalacheck.Gen[io.apibuilder.common.v0.models.Reference] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        guid <- _root_.org.scalacheck.Arbitrary.arbitrary[_root_.java.util.UUID]
        key <- _root_.org.scalacheck.Arbitrary.arbitrary[String]
      } yield io.apibuilder.common.v0.models.Reference(guid, key)
    }

  lazy val genReferenceGuid
    : _root_.org.scalacheck.Gen[io.apibuilder.common.v0.models.ReferenceGuid] =
    _root_.org.scalacheck.Gen.lzy {
      for {
        guid <- _root_.org.scalacheck.Arbitrary.arbitrary[_root_.java.util.UUID]
      } yield io.apibuilder.common.v0.models.ReferenceGuid(guid)
    }

}
